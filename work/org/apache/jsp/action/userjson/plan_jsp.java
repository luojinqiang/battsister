/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.28
 * Generated at: 2015-11-24 09:26:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.action.userjson;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.baje.sz.util.RequestUtil;
import net.sf.json.JSONObject;
import com.hanyou.userjson.FitnessPlan;

public final class plan_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/action/access-allow.jsp", Long.valueOf(1447293016766L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.baje.sz.util.RequestUtil");
    _jspx_imports_classes.add("com.hanyou.userjson.FitnessPlan");
    _jspx_imports_classes.add("net.sf.json.JSONObject");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

    request.setCharacterEncoding("utf-8");
	String allowUrl = "http://api.hanyouapp.com";

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    request.setCharacterEncoding("utf-8");
    RequestUtil ru = new RequestUtil(request);
    FitnessPlan fp = new FitnessPlan();
    response.addHeader("Access-Control-Allow-Origin", allowUrl);
    String action = ru.getString("action");
    if (action.equals("getMyPlan")) {//我的健身历史
        JSONObject result = fp.getMyPlan(request);
        out.print(result.toString());
        return;
    }
    if (action.equals("getPlanContent")) {//健身计划详情
        JSONObject result = fp.getPlanContent(request);
        out.print(result.toString());
        return;
    }
    if (action.equals("getPlanActionContent")) {//健身计划动作详情
        JSONObject result = fp.getPlanActionContent(request);
        out.print(result.toString());
        return;
    }
    if (action.equals("setAddFreePlan")) {//添加免费健身计划
        JSONObject result = fp.setAddFreePlan(request);
        out.print(result.toString());
        return;
    }
    if (action.equals("getTrainMyPlan")) {//获取免费健身计划列表 （训练计划）
        JSONObject result = fp.getTrainMyPlan(request);
        out.print(result.toString());
        return;
    }
    if (action.equals("getFitnessResultList")) {//获取健身成果列表
        JSONObject result = fp.getFitnessResultList(request);
        out.print(result.toString());
        return;
    }
    if (action.equals("setDateSuccess")) {//设置完成计划
        JSONObject result = fp.setDateSuccess(request);
        out.print(result.toString());
        return;
    }
    if("gotoBuyPersonalPlan".equals(action)){//跳转到私人订制购买页面
        out.print(fp.gotoBuyPersonalPlan(request));
        return;
    }
    if("setDelPlan".equals(action)){
        out.print(fp.setDelPlan(request));
        return;
    }
    if("getPersonalPlanCoach".equals(action)){//获取有开通私人定制计划的教练
    	 out.print(fp.getPersonalPlanCoach(request));
         return;
    }

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
